# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  backend_build:
    name: Backend Lint and Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install black isort flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f test/requirements.txt ]; then pip install -r test/requirements.txt; fi
    - name: Lint with flake8
      working-directory: ./backend
      run: |
        # Run black and isort to check fomatting
        black --line-length=127 --check .
        isort --profile black --check-only .
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-line-length=127 --statistics
    - name: Test with pytest
      working-directory: ./backend
      run: |
        pytest --verbose \
          --ignore=build/private \
          --cov ml_space_lambda \
          --cov-report term-missing \
          --cov-report html:build/coverage \
          --cov-report xml:build/coverage/coverage.xml \
          --cov-fail-under 98
  frontend_build:
    name: FrontEnd Lint and Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
    - name: Install dependencies and lint
      working-directory: ./frontend
      run: |
        npm install
    - name: Run unit tests
      working-directory: ./frontend
      run: |
        npm run test
  deployment_build:
    name: CDK Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
    - name: Install dependencies
      run: |
        npm install
    - name: Lint
      run: |
        npm run lint:fix
  cypress_build:
    name: Cypress
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
    - name: Install dependencies
      run: |
        npm install
    - name: Lint
      working-directory: ./cypress
      run: |
        npm run lint:fix
  pre-commit:
    name: Run All Pre-Commit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
    - name: Install dependencies Frontend
      working-directory: ./frontend
      run: |
        npm install
    - name: Install dependencies Backend
      working-directory: ./backend
      run: |
        npm install
        python -m pip install --upgrade pip
        pip install black isort flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f test/requirements.txt ]; then pip install -r test/requirements.txt; fi
        pre-commit install
    - name: Run Pre-Commit
      working-directory: ./
      run: |
        pre-commit run --all-files
